// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file PtActivation.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_PTACTIVATION_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_PTACTIVATION_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "PtActivationData.h"
#include "PtActivationType.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(PTACTIVATION_SOURCE)
#define PTACTIVATION_DllAPI __declspec(dllexport)
#else
#define PTACTIVATION_DllAPI __declspec(dllimport)
#endif  // PTACTIVATION_SOURCE
#else
#define PTACTIVATION_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define PTACTIVATION_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace etsi_its_cam_msgs {

namespace msg {

/*!
 * @brief This class represents the structure PtActivation defined by the user in the IDL file.
 * @ingroup PtActivation
 */
class PtActivation {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport PtActivation();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~PtActivation();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::PtActivation that will be copied.
   */
  eProsima_user_DllExport PtActivation(const PtActivation& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::PtActivation that will be copied.
   */
  eProsima_user_DllExport PtActivation(PtActivation&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::PtActivation that will be copied.
   */
  eProsima_user_DllExport PtActivation& operator=(const PtActivation& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::PtActivation that will be copied.
   */
  eProsima_user_DllExport PtActivation& operator=(PtActivation&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::PtActivation object to compare.
   */
  eProsima_user_DllExport bool operator==(const PtActivation& x) const;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::PtActivation object to compare.
   */
  eProsima_user_DllExport bool operator!=(const PtActivation& x) const;

  /*!
   * @brief This function copies the value in member pt_activation_type
   * @param _pt_activation_type New value to be copied in member pt_activation_type
   */
  eProsima_user_DllExport void pt_activation_type(const etsi_its_cam_msgs::msg::PtActivationType& _pt_activation_type);

  /*!
   * @brief This function moves the value in member pt_activation_type
   * @param _pt_activation_type New value to be moved in member pt_activation_type
   */
  eProsima_user_DllExport void pt_activation_type(etsi_its_cam_msgs::msg::PtActivationType&& _pt_activation_type);

  /*!
   * @brief This function returns a constant reference to member pt_activation_type
   * @return Constant reference to member pt_activation_type
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::PtActivationType& pt_activation_type() const;

  /*!
   * @brief This function returns a reference to member pt_activation_type
   * @return Reference to member pt_activation_type
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::PtActivationType& pt_activation_type();

  /*!
   * @brief This function copies the value in member pt_activation_data
   * @param _pt_activation_data New value to be copied in member pt_activation_data
   */
  eProsima_user_DllExport void pt_activation_data(const etsi_its_cam_msgs::msg::PtActivationData& _pt_activation_data);

  /*!
   * @brief This function moves the value in member pt_activation_data
   * @param _pt_activation_data New value to be moved in member pt_activation_data
   */
  eProsima_user_DllExport void pt_activation_data(etsi_its_cam_msgs::msg::PtActivationData&& _pt_activation_data);

  /*!
   * @brief This function returns a constant reference to member pt_activation_data
   * @return Constant reference to member pt_activation_data
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::PtActivationData& pt_activation_data() const;

  /*!
   * @brief This function returns a reference to member pt_activation_data
   * @return Reference to member pt_activation_data
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::PtActivationData& pt_activation_data();

private:
  etsi_its_cam_msgs::msg::PtActivationType m_pt_activation_type;
  etsi_its_cam_msgs::msg::PtActivationData m_pt_activation_data;
};

}  // namespace msg

}  // namespace etsi_its_cam_msgs

#endif  // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_PTACTIVATION_H_
