// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file BasicVehicleContainerLowFrequency.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_BASICVEHICLECONTAINERLOWFREQUENCY_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_BASICVEHICLECONTAINERLOWFREQUENCY_H_

#include "VehicleRole.h"
#include "ExteriorLights.h"
#include "PathHistory.h"

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(BasicVehicleContainerLowFrequency_SOURCE)
#define BasicVehicleContainerLowFrequency_DllAPI __declspec( dllexport )
#else
#define BasicVehicleContainerLowFrequency_DllAPI __declspec( dllimport )
#endif // BasicVehicleContainerLowFrequency_SOURCE
#else
#define BasicVehicleContainerLowFrequency_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define BasicVehicleContainerLowFrequency_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


namespace etsi_its_cam_msgs {
    namespace msg {
        /*!
         * @brief This class represents the structure BasicVehicleContainerLowFrequency defined by the user in the IDL file.
         * @ingroup BASICVEHICLECONTAINERLOWFREQUENCY
         */
        class BasicVehicleContainerLowFrequency
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport BasicVehicleContainerLowFrequency();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~BasicVehicleContainerLowFrequency();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerLowFrequency(
                    const BasicVehicleContainerLowFrequency& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerLowFrequency(
                    BasicVehicleContainerLowFrequency&& x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerLowFrequency& operator =(
                    const BasicVehicleContainerLowFrequency& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerLowFrequency& operator =(
                    BasicVehicleContainerLowFrequency&& x);

            /*!
             * @brief Comparison operator.
             * @param x etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const BasicVehicleContainerLowFrequency& x) const;

            /*!
             * @brief Comparison operator.
             * @param x etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const BasicVehicleContainerLowFrequency& x) const;

            /*!
             * @brief This function copies the value in member vehicle_role
             * @param _vehicle_role New value to be copied in member vehicle_role
             */
            eProsima_user_DllExport void vehicle_role(
                    const etsi_its_cam_msgs::msg::VehicleRole& _vehicle_role);

            /*!
             * @brief This function moves the value in member vehicle_role
             * @param _vehicle_role New value to be moved in member vehicle_role
             */
            eProsima_user_DllExport void vehicle_role(
                    etsi_its_cam_msgs::msg::VehicleRole&& _vehicle_role);

            /*!
             * @brief This function returns a constant reference to member vehicle_role
             * @return Constant reference to member vehicle_role
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::VehicleRole& vehicle_role() const;

            /*!
             * @brief This function returns a reference to member vehicle_role
             * @return Reference to member vehicle_role
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::VehicleRole& vehicle_role();
            /*!
             * @brief This function copies the value in member exterior_lights
             * @param _exterior_lights New value to be copied in member exterior_lights
             */
            eProsima_user_DllExport void exterior_lights(
                    const etsi_its_cam_msgs::msg::ExteriorLights& _exterior_lights);

            /*!
             * @brief This function moves the value in member exterior_lights
             * @param _exterior_lights New value to be moved in member exterior_lights
             */
            eProsima_user_DllExport void exterior_lights(
                    etsi_its_cam_msgs::msg::ExteriorLights&& _exterior_lights);

            /*!
             * @brief This function returns a constant reference to member exterior_lights
             * @return Constant reference to member exterior_lights
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::ExteriorLights& exterior_lights() const;

            /*!
             * @brief This function returns a reference to member exterior_lights
             * @return Reference to member exterior_lights
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::ExteriorLights& exterior_lights();
            /*!
             * @brief This function copies the value in member path_history
             * @param _path_history New value to be copied in member path_history
             */
            eProsima_user_DllExport void path_history(
                    const etsi_its_cam_msgs::msg::PathHistory& _path_history);

            /*!
             * @brief This function moves the value in member path_history
             * @param _path_history New value to be moved in member path_history
             */
            eProsima_user_DllExport void path_history(
                    etsi_its_cam_msgs::msg::PathHistory&& _path_history);

            /*!
             * @brief This function returns a constant reference to member path_history
             * @return Constant reference to member path_history
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::PathHistory& path_history() const;

            /*!
             * @brief This function returns a reference to member path_history
             * @return Reference to member path_history
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::PathHistory& path_history();

            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const etsi_its_cam_msgs::msg::BasicVehicleContainerLowFrequency& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            etsi_its_cam_msgs::msg::VehicleRole m_vehicle_role;
            etsi_its_cam_msgs::msg::ExteriorLights m_exterior_lights;
            etsi_its_cam_msgs::msg::PathHistory m_path_history;
        };
    } // namespace msg
} // namespace etsi_its_cam_msgs

#endif // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_BASICVEHICLECONTAINERLOWFREQUENCY_H_