// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ProtectedCommunicationZone.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_PROTECTEDCOMMUNICATIONZONE_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_PROTECTEDCOMMUNICATIONZONE_H_

#include "ProtectedZoneRadius.h"
#include "TimestampIts.h"
#include "ProtectedZoneID.h"
#include "ProtectedZoneType.h"
#include "Latitude.h"
#include "Longitude.h"

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(ProtectedCommunicationZone_SOURCE)
#define ProtectedCommunicationZone_DllAPI __declspec( dllexport )
#else
#define ProtectedCommunicationZone_DllAPI __declspec( dllimport )
#endif // ProtectedCommunicationZone_SOURCE
#else
#define ProtectedCommunicationZone_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define ProtectedCommunicationZone_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


namespace etsi_its_cam_msgs {
    namespace msg {
        /*!
         * @brief This class represents the structure ProtectedCommunicationZone defined by the user in the IDL file.
         * @ingroup PROTECTEDCOMMUNICATIONZONE
         */
        class ProtectedCommunicationZone
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport ProtectedCommunicationZone();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~ProtectedCommunicationZone();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object etsi_its_cam_msgs::msg::ProtectedCommunicationZone that will be copied.
             */
            eProsima_user_DllExport ProtectedCommunicationZone(
                    const ProtectedCommunicationZone& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object etsi_its_cam_msgs::msg::ProtectedCommunicationZone that will be copied.
             */
            eProsima_user_DllExport ProtectedCommunicationZone(
                    ProtectedCommunicationZone&& x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object etsi_its_cam_msgs::msg::ProtectedCommunicationZone that will be copied.
             */
            eProsima_user_DllExport ProtectedCommunicationZone& operator =(
                    const ProtectedCommunicationZone& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object etsi_its_cam_msgs::msg::ProtectedCommunicationZone that will be copied.
             */
            eProsima_user_DllExport ProtectedCommunicationZone& operator =(
                    ProtectedCommunicationZone&& x);

            /*!
             * @brief Comparison operator.
             * @param x etsi_its_cam_msgs::msg::ProtectedCommunicationZone object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const ProtectedCommunicationZone& x) const;

            /*!
             * @brief Comparison operator.
             * @param x etsi_its_cam_msgs::msg::ProtectedCommunicationZone object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const ProtectedCommunicationZone& x) const;

            /*!
             * @brief This function copies the value in member protected_zone_type
             * @param _protected_zone_type New value to be copied in member protected_zone_type
             */
            eProsima_user_DllExport void protected_zone_type(
                    const etsi_its_cam_msgs::msg::ProtectedZoneType& _protected_zone_type);

            /*!
             * @brief This function moves the value in member protected_zone_type
             * @param _protected_zone_type New value to be moved in member protected_zone_type
             */
            eProsima_user_DllExport void protected_zone_type(
                    etsi_its_cam_msgs::msg::ProtectedZoneType&& _protected_zone_type);

            /*!
             * @brief This function returns a constant reference to member protected_zone_type
             * @return Constant reference to member protected_zone_type
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::ProtectedZoneType& protected_zone_type() const;

            /*!
             * @brief This function returns a reference to member protected_zone_type
             * @return Reference to member protected_zone_type
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::ProtectedZoneType& protected_zone_type();
            /*!
             * @brief This function copies the value in member expiry_time
             * @param _expiry_time New value to be copied in member expiry_time
             */
            eProsima_user_DllExport void expiry_time(
                    const etsi_its_cam_msgs::msg::TimestampIts& _expiry_time);

            /*!
             * @brief This function moves the value in member expiry_time
             * @param _expiry_time New value to be moved in member expiry_time
             */
            eProsima_user_DllExport void expiry_time(
                    etsi_its_cam_msgs::msg::TimestampIts&& _expiry_time);

            /*!
             * @brief This function returns a constant reference to member expiry_time
             * @return Constant reference to member expiry_time
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::TimestampIts& expiry_time() const;

            /*!
             * @brief This function returns a reference to member expiry_time
             * @return Reference to member expiry_time
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::TimestampIts& expiry_time();
            /*!
             * @brief This function sets a value in member expiry_time_is_present
             * @param _expiry_time_is_present New value for member expiry_time_is_present
             */
            eProsima_user_DllExport void expiry_time_is_present(
                    bool _expiry_time_is_present);

            /*!
             * @brief This function returns the value of member expiry_time_is_present
             * @return Value of member expiry_time_is_present
             */
            eProsima_user_DllExport bool expiry_time_is_present() const;

            /*!
             * @brief This function returns a reference to member expiry_time_is_present
             * @return Reference to member expiry_time_is_present
             */
            eProsima_user_DllExport bool& expiry_time_is_present();

            /*!
             * @brief This function copies the value in member protected_zone_latitude
             * @param _protected_zone_latitude New value to be copied in member protected_zone_latitude
             */
            eProsima_user_DllExport void protected_zone_latitude(
                    const etsi_its_cam_msgs::msg::Latitude& _protected_zone_latitude);

            /*!
             * @brief This function moves the value in member protected_zone_latitude
             * @param _protected_zone_latitude New value to be moved in member protected_zone_latitude
             */
            eProsima_user_DllExport void protected_zone_latitude(
                    etsi_its_cam_msgs::msg::Latitude&& _protected_zone_latitude);

            /*!
             * @brief This function returns a constant reference to member protected_zone_latitude
             * @return Constant reference to member protected_zone_latitude
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::Latitude& protected_zone_latitude() const;

            /*!
             * @brief This function returns a reference to member protected_zone_latitude
             * @return Reference to member protected_zone_latitude
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::Latitude& protected_zone_latitude();
            /*!
             * @brief This function copies the value in member protected_zone_longitude
             * @param _protected_zone_longitude New value to be copied in member protected_zone_longitude
             */
            eProsima_user_DllExport void protected_zone_longitude(
                    const etsi_its_cam_msgs::msg::Longitude& _protected_zone_longitude);

            /*!
             * @brief This function moves the value in member protected_zone_longitude
             * @param _protected_zone_longitude New value to be moved in member protected_zone_longitude
             */
            eProsima_user_DllExport void protected_zone_longitude(
                    etsi_its_cam_msgs::msg::Longitude&& _protected_zone_longitude);

            /*!
             * @brief This function returns a constant reference to member protected_zone_longitude
             * @return Constant reference to member protected_zone_longitude
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::Longitude& protected_zone_longitude() const;

            /*!
             * @brief This function returns a reference to member protected_zone_longitude
             * @return Reference to member protected_zone_longitude
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::Longitude& protected_zone_longitude();
            /*!
             * @brief This function copies the value in member protected_zone_radius
             * @param _protected_zone_radius New value to be copied in member protected_zone_radius
             */
            eProsima_user_DllExport void protected_zone_radius(
                    const etsi_its_cam_msgs::msg::ProtectedZoneRadius& _protected_zone_radius);

            /*!
             * @brief This function moves the value in member protected_zone_radius
             * @param _protected_zone_radius New value to be moved in member protected_zone_radius
             */
            eProsima_user_DllExport void protected_zone_radius(
                    etsi_its_cam_msgs::msg::ProtectedZoneRadius&& _protected_zone_radius);

            /*!
             * @brief This function returns a constant reference to member protected_zone_radius
             * @return Constant reference to member protected_zone_radius
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::ProtectedZoneRadius& protected_zone_radius() const;

            /*!
             * @brief This function returns a reference to member protected_zone_radius
             * @return Reference to member protected_zone_radius
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::ProtectedZoneRadius& protected_zone_radius();
            /*!
             * @brief This function sets a value in member protected_zone_radius_is_present
             * @param _protected_zone_radius_is_present New value for member protected_zone_radius_is_present
             */
            eProsima_user_DllExport void protected_zone_radius_is_present(
                    bool _protected_zone_radius_is_present);

            /*!
             * @brief This function returns the value of member protected_zone_radius_is_present
             * @return Value of member protected_zone_radius_is_present
             */
            eProsima_user_DllExport bool protected_zone_radius_is_present() const;

            /*!
             * @brief This function returns a reference to member protected_zone_radius_is_present
             * @return Reference to member protected_zone_radius_is_present
             */
            eProsima_user_DllExport bool& protected_zone_radius_is_present();

            /*!
             * @brief This function copies the value in member protected_zone_id
             * @param _protected_zone_id New value to be copied in member protected_zone_id
             */
            eProsima_user_DllExport void protected_zone_id(
                    const etsi_its_cam_msgs::msg::ProtectedZoneID& _protected_zone_id);

            /*!
             * @brief This function moves the value in member protected_zone_id
             * @param _protected_zone_id New value to be moved in member protected_zone_id
             */
            eProsima_user_DllExport void protected_zone_id(
                    etsi_its_cam_msgs::msg::ProtectedZoneID&& _protected_zone_id);

            /*!
             * @brief This function returns a constant reference to member protected_zone_id
             * @return Constant reference to member protected_zone_id
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::ProtectedZoneID& protected_zone_id() const;

            /*!
             * @brief This function returns a reference to member protected_zone_id
             * @return Reference to member protected_zone_id
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::ProtectedZoneID& protected_zone_id();
            /*!
             * @brief This function sets a value in member protected_zone_id_is_present
             * @param _protected_zone_id_is_present New value for member protected_zone_id_is_present
             */
            eProsima_user_DllExport void protected_zone_id_is_present(
                    bool _protected_zone_id_is_present);

            /*!
             * @brief This function returns the value of member protected_zone_id_is_present
             * @return Value of member protected_zone_id_is_present
             */
            eProsima_user_DllExport bool protected_zone_id_is_present() const;

            /*!
             * @brief This function returns a reference to member protected_zone_id_is_present
             * @return Reference to member protected_zone_id_is_present
             */
            eProsima_user_DllExport bool& protected_zone_id_is_present();


            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const etsi_its_cam_msgs::msg::ProtectedCommunicationZone& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            etsi_its_cam_msgs::msg::ProtectedZoneType m_protected_zone_type;
            etsi_its_cam_msgs::msg::TimestampIts m_expiry_time;
            bool m_expiry_time_is_present;
            etsi_its_cam_msgs::msg::Latitude m_protected_zone_latitude;
            etsi_its_cam_msgs::msg::Longitude m_protected_zone_longitude;
            etsi_its_cam_msgs::msg::ProtectedZoneRadius m_protected_zone_radius;
            bool m_protected_zone_radius_is_present;
            etsi_its_cam_msgs::msg::ProtectedZoneID m_protected_zone_id;
            bool m_protected_zone_id_is_present;
        };
    } // namespace msg
} // namespace etsi_its_cam_msgs

#endif // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_PROTECTEDCOMMUNICATIONZONE_H_