// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file YawRate.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_YAWRATE_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_YAWRATE_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "YawRateConfidence.h"
#include "YawRateValue.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(YAWRATE_SOURCE)
#define YAWRATE_DllAPI __declspec(dllexport)
#else
#define YAWRATE_DllAPI __declspec(dllimport)
#endif  // YAWRATE_SOURCE
#else
#define YAWRATE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define YAWRATE_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace etsi_its_cam_msgs {

namespace msg {

/*!
 * @brief This class represents the structure YawRate defined by the user in the IDL file.
 * @ingroup YawRate
 */
class YawRate {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport YawRate();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~YawRate();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::YawRate that will be copied.
   */
  eProsima_user_DllExport YawRate(const YawRate& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::YawRate that will be copied.
   */
  eProsima_user_DllExport YawRate(YawRate&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::YawRate that will be copied.
   */
  eProsima_user_DllExport YawRate& operator=(const YawRate& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::YawRate that will be copied.
   */
  eProsima_user_DllExport YawRate& operator=(YawRate&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::YawRate object to compare.
   */
  eProsima_user_DllExport bool operator==(const YawRate& x) const;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::YawRate object to compare.
   */
  eProsima_user_DllExport bool operator!=(const YawRate& x) const;

  /*!
   * @brief This function copies the value in member yaw_rate_value
   * @param _yaw_rate_value New value to be copied in member yaw_rate_value
   */
  eProsima_user_DllExport void yaw_rate_value(const etsi_its_cam_msgs::msg::YawRateValue& _yaw_rate_value);

  /*!
   * @brief This function moves the value in member yaw_rate_value
   * @param _yaw_rate_value New value to be moved in member yaw_rate_value
   */
  eProsima_user_DllExport void yaw_rate_value(etsi_its_cam_msgs::msg::YawRateValue&& _yaw_rate_value);

  /*!
   * @brief This function returns a constant reference to member yaw_rate_value
   * @return Constant reference to member yaw_rate_value
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::YawRateValue& yaw_rate_value() const;

  /*!
   * @brief This function returns a reference to member yaw_rate_value
   * @return Reference to member yaw_rate_value
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::YawRateValue& yaw_rate_value();

  /*!
   * @brief This function copies the value in member yaw_rate_confidence
   * @param _yaw_rate_confidence New value to be copied in member yaw_rate_confidence
   */
  eProsima_user_DllExport void yaw_rate_confidence(
      const etsi_its_cam_msgs::msg::YawRateConfidence& _yaw_rate_confidence);

  /*!
   * @brief This function moves the value in member yaw_rate_confidence
   * @param _yaw_rate_confidence New value to be moved in member yaw_rate_confidence
   */
  eProsima_user_DllExport void yaw_rate_confidence(etsi_its_cam_msgs::msg::YawRateConfidence&& _yaw_rate_confidence);

  /*!
   * @brief This function returns a constant reference to member yaw_rate_confidence
   * @return Constant reference to member yaw_rate_confidence
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::YawRateConfidence& yaw_rate_confidence() const;

  /*!
   * @brief This function returns a reference to member yaw_rate_confidence
   * @return Reference to member yaw_rate_confidence
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::YawRateConfidence& yaw_rate_confidence();

private:
  etsi_its_cam_msgs::msg::YawRateValue m_yaw_rate_value;
  etsi_its_cam_msgs::msg::YawRateConfidence m_yaw_rate_confidence;
};

}  // namespace msg

}  // namespace etsi_its_cam_msgs

#endif  // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_YAWRATE_H_
