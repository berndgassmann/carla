// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ReferencePosition.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_REFERENCEPOSITION_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_REFERENCEPOSITION_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "Altitude.h"
#include "Latitude.h"
#include "Longitude.h"
#include "PosConfidenceEllipse.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(REFERENCEPOSITION_SOURCE)
#define REFERENCEPOSITION_DllAPI __declspec(dllexport)
#else
#define REFERENCEPOSITION_DllAPI __declspec(dllimport)
#endif  // REFERENCEPOSITION_SOURCE
#else
#define REFERENCEPOSITION_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define REFERENCEPOSITION_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace etsi_its_cam_msgs {

namespace msg {

/*!
 * @brief This class represents the structure ReferencePosition defined by the user in the IDL file.
 * @ingroup ReferencePosition
 */
class ReferencePosition {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport ReferencePosition();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~ReferencePosition();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::ReferencePosition that will be copied.
   */
  eProsima_user_DllExport ReferencePosition(const ReferencePosition& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::ReferencePosition that will be copied.
   */
  eProsima_user_DllExport ReferencePosition(ReferencePosition&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::ReferencePosition that will be copied.
   */
  eProsima_user_DllExport ReferencePosition& operator=(const ReferencePosition& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::ReferencePosition that will be copied.
   */
  eProsima_user_DllExport ReferencePosition& operator=(ReferencePosition&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::ReferencePosition object to compare.
   */
  eProsima_user_DllExport bool operator==(const ReferencePosition& x) const;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::ReferencePosition object to compare.
   */
  eProsima_user_DllExport bool operator!=(const ReferencePosition& x) const;

  /*!
   * @brief This function copies the value in member latitude
   * @param _latitude New value to be copied in member latitude
   */
  eProsima_user_DllExport void latitude(const etsi_its_cam_msgs::msg::Latitude& _latitude);

  /*!
   * @brief This function moves the value in member latitude
   * @param _latitude New value to be moved in member latitude
   */
  eProsima_user_DllExport void latitude(etsi_its_cam_msgs::msg::Latitude&& _latitude);

  /*!
   * @brief This function returns a constant reference to member latitude
   * @return Constant reference to member latitude
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::Latitude& latitude() const;

  /*!
   * @brief This function returns a reference to member latitude
   * @return Reference to member latitude
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::Latitude& latitude();

  /*!
   * @brief This function copies the value in member longitude
   * @param _longitude New value to be copied in member longitude
   */
  eProsima_user_DllExport void longitude(const etsi_its_cam_msgs::msg::Longitude& _longitude);

  /*!
   * @brief This function moves the value in member longitude
   * @param _longitude New value to be moved in member longitude
   */
  eProsima_user_DllExport void longitude(etsi_its_cam_msgs::msg::Longitude&& _longitude);

  /*!
   * @brief This function returns a constant reference to member longitude
   * @return Constant reference to member longitude
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::Longitude& longitude() const;

  /*!
   * @brief This function returns a reference to member longitude
   * @return Reference to member longitude
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::Longitude& longitude();

  /*!
   * @brief This function copies the value in member position_confidence_ellipse
   * @param _position_confidence_ellipse New value to be copied in member position_confidence_ellipse
   */
  eProsima_user_DllExport void position_confidence_ellipse(
      const etsi_its_cam_msgs::msg::PosConfidenceEllipse& _position_confidence_ellipse);

  /*!
   * @brief This function moves the value in member position_confidence_ellipse
   * @param _position_confidence_ellipse New value to be moved in member position_confidence_ellipse
   */
  eProsima_user_DllExport void position_confidence_ellipse(
      etsi_its_cam_msgs::msg::PosConfidenceEllipse&& _position_confidence_ellipse);

  /*!
   * @brief This function returns a constant reference to member position_confidence_ellipse
   * @return Constant reference to member position_confidence_ellipse
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::PosConfidenceEllipse& position_confidence_ellipse() const;

  /*!
   * @brief This function returns a reference to member position_confidence_ellipse
   * @return Reference to member position_confidence_ellipse
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::PosConfidenceEllipse& position_confidence_ellipse();

  /*!
   * @brief This function copies the value in member altitude
   * @param _altitude New value to be copied in member altitude
   */
  eProsima_user_DllExport void altitude(const etsi_its_cam_msgs::msg::Altitude& _altitude);

  /*!
   * @brief This function moves the value in member altitude
   * @param _altitude New value to be moved in member altitude
   */
  eProsima_user_DllExport void altitude(etsi_its_cam_msgs::msg::Altitude&& _altitude);

  /*!
   * @brief This function returns a constant reference to member altitude
   * @return Constant reference to member altitude
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::Altitude& altitude() const;

  /*!
   * @brief This function returns a reference to member altitude
   * @return Reference to member altitude
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::Altitude& altitude();

private:
  etsi_its_cam_msgs::msg::Latitude m_latitude;
  etsi_its_cam_msgs::msg::Longitude m_longitude;
  etsi_its_cam_msgs::msg::PosConfidenceEllipse m_position_confidence_ellipse;
  etsi_its_cam_msgs::msg::Altitude m_altitude;
};

}  // namespace msg

}  // namespace etsi_its_cam_msgs

#endif  // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_REFERENCEPOSITION_H_
