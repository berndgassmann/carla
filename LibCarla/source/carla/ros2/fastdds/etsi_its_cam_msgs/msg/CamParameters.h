// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file CamParameters.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_CAMPARAMETERS_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_CAMPARAMETERS_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "BasicContainer.h"
#include "HighFrequencyContainer.h"
#include "LowFrequencyContainer.h"
#include "SpecialVehicleContainer.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(CAMPARAMETERS_SOURCE)
#define CAMPARAMETERS_DllAPI __declspec(dllexport)
#else
#define CAMPARAMETERS_DllAPI __declspec(dllimport)
#endif  // CAMPARAMETERS_SOURCE
#else
#define CAMPARAMETERS_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define CAMPARAMETERS_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace etsi_its_cam_msgs {

namespace msg {

/*!
 * @brief This class represents the structure CamParameters defined by the user in the IDL file.
 * @ingroup CamParameters
 */
class CamParameters {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport CamParameters();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~CamParameters();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::CamParameters that will be copied.
   */
  eProsima_user_DllExport CamParameters(const CamParameters& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object etsi_its_cam_msgs::msg::CamParameters that will be copied.
   */
  eProsima_user_DllExport CamParameters(CamParameters&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::CamParameters that will be copied.
   */
  eProsima_user_DllExport CamParameters& operator=(const CamParameters& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object etsi_its_cam_msgs::msg::CamParameters that will be copied.
   */
  eProsima_user_DllExport CamParameters& operator=(CamParameters&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::CamParameters object to compare.
   */
  eProsima_user_DllExport bool operator==(const CamParameters& x) const;

  /*!
   * @brief Comparison operator.
   * @param x etsi_its_cam_msgs::msg::CamParameters object to compare.
   */
  eProsima_user_DllExport bool operator!=(const CamParameters& x) const;

  /*!
   * @brief This function copies the value in member basic_container
   * @param _basic_container New value to be copied in member basic_container
   */
  eProsima_user_DllExport void basic_container(const etsi_its_cam_msgs::msg::BasicContainer& _basic_container);

  /*!
   * @brief This function moves the value in member basic_container
   * @param _basic_container New value to be moved in member basic_container
   */
  eProsima_user_DllExport void basic_container(etsi_its_cam_msgs::msg::BasicContainer&& _basic_container);

  /*!
   * @brief This function returns a constant reference to member basic_container
   * @return Constant reference to member basic_container
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::BasicContainer& basic_container() const;

  /*!
   * @brief This function returns a reference to member basic_container
   * @return Reference to member basic_container
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::BasicContainer& basic_container();

  /*!
   * @brief This function copies the value in member high_frequency_container
   * @param _high_frequency_container New value to be copied in member high_frequency_container
   */
  eProsima_user_DllExport void high_frequency_container(
      const etsi_its_cam_msgs::msg::HighFrequencyContainer& _high_frequency_container);

  /*!
   * @brief This function moves the value in member high_frequency_container
   * @param _high_frequency_container New value to be moved in member high_frequency_container
   */
  eProsima_user_DllExport void high_frequency_container(
      etsi_its_cam_msgs::msg::HighFrequencyContainer&& _high_frequency_container);

  /*!
   * @brief This function returns a constant reference to member high_frequency_container
   * @return Constant reference to member high_frequency_container
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::HighFrequencyContainer& high_frequency_container() const;

  /*!
   * @brief This function returns a reference to member high_frequency_container
   * @return Reference to member high_frequency_container
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::HighFrequencyContainer& high_frequency_container();

  /*!
   * @brief This function copies the value in member low_frequency_container
   * @param _low_frequency_container New value to be copied in member low_frequency_container
   */
  eProsima_user_DllExport void low_frequency_container(
      const etsi_its_cam_msgs::msg::LowFrequencyContainer& _low_frequency_container);

  /*!
   * @brief This function moves the value in member low_frequency_container
   * @param _low_frequency_container New value to be moved in member low_frequency_container
   */
  eProsima_user_DllExport void low_frequency_container(
      etsi_its_cam_msgs::msg::LowFrequencyContainer&& _low_frequency_container);

  /*!
   * @brief This function returns a constant reference to member low_frequency_container
   * @return Constant reference to member low_frequency_container
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::LowFrequencyContainer& low_frequency_container() const;

  /*!
   * @brief This function returns a reference to member low_frequency_container
   * @return Reference to member low_frequency_container
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::LowFrequencyContainer& low_frequency_container();

  /*!
   * @brief This function sets a value in member low_frequency_container_is_present
   * @param _low_frequency_container_is_present New value for member low_frequency_container_is_present
   */
  eProsima_user_DllExport void low_frequency_container_is_present(bool _low_frequency_container_is_present);

  /*!
   * @brief This function returns the value of member low_frequency_container_is_present
   * @return Value of member low_frequency_container_is_present
   */
  eProsima_user_DllExport bool low_frequency_container_is_present() const;

  /*!
   * @brief This function returns a reference to member low_frequency_container_is_present
   * @return Reference to member low_frequency_container_is_present
   */
  eProsima_user_DllExport bool& low_frequency_container_is_present();

  /*!
   * @brief This function copies the value in member special_vehicle_container
   * @param _special_vehicle_container New value to be copied in member special_vehicle_container
   */
  eProsima_user_DllExport void special_vehicle_container(
      const etsi_its_cam_msgs::msg::SpecialVehicleContainer& _special_vehicle_container);

  /*!
   * @brief This function moves the value in member special_vehicle_container
   * @param _special_vehicle_container New value to be moved in member special_vehicle_container
   */
  eProsima_user_DllExport void special_vehicle_container(
      etsi_its_cam_msgs::msg::SpecialVehicleContainer&& _special_vehicle_container);

  /*!
   * @brief This function returns a constant reference to member special_vehicle_container
   * @return Constant reference to member special_vehicle_container
   */
  eProsima_user_DllExport const etsi_its_cam_msgs::msg::SpecialVehicleContainer& special_vehicle_container() const;

  /*!
   * @brief This function returns a reference to member special_vehicle_container
   * @return Reference to member special_vehicle_container
   */
  eProsima_user_DllExport etsi_its_cam_msgs::msg::SpecialVehicleContainer& special_vehicle_container();

  /*!
   * @brief This function sets a value in member special_vehicle_container_is_present
   * @param _special_vehicle_container_is_present New value for member special_vehicle_container_is_present
   */
  eProsima_user_DllExport void special_vehicle_container_is_present(bool _special_vehicle_container_is_present);

  /*!
   * @brief This function returns the value of member special_vehicle_container_is_present
   * @return Value of member special_vehicle_container_is_present
   */
  eProsima_user_DllExport bool special_vehicle_container_is_present() const;

  /*!
   * @brief This function returns a reference to member special_vehicle_container_is_present
   * @return Reference to member special_vehicle_container_is_present
   */
  eProsima_user_DllExport bool& special_vehicle_container_is_present();

private:
  etsi_its_cam_msgs::msg::BasicContainer m_basic_container;
  etsi_its_cam_msgs::msg::HighFrequencyContainer m_high_frequency_container;
  etsi_its_cam_msgs::msg::LowFrequencyContainer m_low_frequency_container;
  bool m_low_frequency_container_is_present{false};
  etsi_its_cam_msgs::msg::SpecialVehicleContainer m_special_vehicle_container;
  bool m_special_vehicle_container_is_present{false};
};

}  // namespace msg

}  // namespace etsi_its_cam_msgs

#endif  // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_CAMPARAMETERS_H_
