// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file BasicVehicleContainerHighFrequency.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_BASICVEHICLECONTAINERHIGHFREQUENCY_H_
#define _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_BASICVEHICLECONTAINERHIGHFREQUENCY_H_

#include "DriveDirection.h"
#include "Speed.h"
#include "Heading.h"
#include "VehicleWidth.h"
#include "CenDsrcTollingZone.h"
#include "YawRate.h"
#include "VehicleLength.h"
#include "CurvatureCalculationMode.h"
#include "LanePosition.h"
#include "LateralAcceleration.h"
#include "VerticalAcceleration.h"
#include "SteeringWheelAngle.h"
#include "LongitudinalAcceleration.h"
#include "Curvature.h"
#include "PerformanceClass.h"
#include "AccelerationControl.h"

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(BasicVehicleContainerHighFrequency_SOURCE)
#define BasicVehicleContainerHighFrequency_DllAPI __declspec( dllexport )
#else
#define BasicVehicleContainerHighFrequency_DllAPI __declspec( dllimport )
#endif // BasicVehicleContainerHighFrequency_SOURCE
#else
#define BasicVehicleContainerHighFrequency_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define BasicVehicleContainerHighFrequency_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


namespace etsi_its_cam_msgs {
    namespace msg {
        /*!
         * @brief This class represents the structure BasicVehicleContainerHighFrequency defined by the user in the IDL file.
         * @ingroup BASICVEHICLECONTAINERHIGHFREQUENCY
         */
        class BasicVehicleContainerHighFrequency
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport BasicVehicleContainerHighFrequency();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~BasicVehicleContainerHighFrequency();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerHighFrequency(
                    const BasicVehicleContainerHighFrequency& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerHighFrequency(
                    BasicVehicleContainerHighFrequency&& x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerHighFrequency& operator =(
                    const BasicVehicleContainerHighFrequency& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency that will be copied.
             */
            eProsima_user_DllExport BasicVehicleContainerHighFrequency& operator =(
                    BasicVehicleContainerHighFrequency&& x);

            /*!
             * @brief Comparison operator.
             * @param x etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const BasicVehicleContainerHighFrequency& x) const;

            /*!
             * @brief Comparison operator.
             * @param x etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const BasicVehicleContainerHighFrequency& x) const;

            /*!
             * @brief This function copies the value in member heading_
             * @param _heading New value to be copied in member heading_
             */
            eProsima_user_DllExport void heading(
                    const etsi_its_cam_msgs::msg::Heading& _heading);

            /*!
             * @brief This function moves the value in member heading_
             * @param _heading New value to be moved in member heading_
             */
            eProsima_user_DllExport void heading(
                    etsi_its_cam_msgs::msg::Heading&& _heading);

            /*!
             * @brief This function returns a constant reference to member heading_
             * @return Constant reference to member heading_
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::Heading& heading() const;

            /*!
             * @brief This function returns a reference to member heading_
             * @return Reference to member heading_
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::Heading& heading();
            /*!
             * @brief This function copies the value in member speed_
             * @param _speed New value to be copied in member speed_
             */
            eProsima_user_DllExport void speed(
                    const etsi_its_cam_msgs::msg::Speed& _speed);

            /*!
             * @brief This function moves the value in member speed_
             * @param _speed New value to be moved in member speed_
             */
            eProsima_user_DllExport void speed(
                    etsi_its_cam_msgs::msg::Speed&& _speed);

            /*!
             * @brief This function returns a constant reference to member speed_
             * @return Constant reference to member speed_
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::Speed& speed() const;

            /*!
             * @brief This function returns a reference to member speed_
             * @return Reference to member speed_
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::Speed& speed();
            /*!
             * @brief This function copies the value in member drive_direction
             * @param _drive_direction New value to be copied in member drive_direction
             */
            eProsima_user_DllExport void drive_direction(
                    const etsi_its_cam_msgs::msg::DriveDirection& _drive_direction);

            /*!
             * @brief This function moves the value in member drive_direction
             * @param _drive_direction New value to be moved in member drive_direction
             */
            eProsima_user_DllExport void drive_direction(
                    etsi_its_cam_msgs::msg::DriveDirection&& _drive_direction);

            /*!
             * @brief This function returns a constant reference to member drive_direction
             * @return Constant reference to member drive_direction
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::DriveDirection& drive_direction() const;

            /*!
             * @brief This function returns a reference to member drive_direction
             * @return Reference to member drive_direction
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::DriveDirection& drive_direction();
            /*!
             * @brief This function copies the value in member vehicle_length
             * @param _vehicle_length New value to be copied in member vehicle_length
             */
            eProsima_user_DllExport void vehicle_length(
                    const etsi_its_cam_msgs::msg::VehicleLength& _vehicle_length);

            /*!
             * @brief This function moves the value in member vehicle_length
             * @param _vehicle_length New value to be moved in member vehicle_length
             */
            eProsima_user_DllExport void vehicle_length(
                    etsi_its_cam_msgs::msg::VehicleLength&& _vehicle_length);

            /*!
             * @brief This function returns a constant reference to member vehicle_length
             * @return Constant reference to member vehicle_length
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::VehicleLength& vehicle_length() const;

            /*!
             * @brief This function returns a reference to member vehicle_length
             * @return Reference to member vehicle_length
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::VehicleLength& vehicle_length();
            /*!
             * @brief This function copies the value in member vehicle_width
             * @param _vehicle_width New value to be copied in member vehicle_width
             */
            eProsima_user_DllExport void vehicle_width(
                    const etsi_its_cam_msgs::msg::VehicleWidth& _vehicle_width);

            /*!
             * @brief This function moves the value in member vehicle_width
             * @param _vehicle_width New value to be moved in member vehicle_width
             */
            eProsima_user_DllExport void vehicle_width(
                    etsi_its_cam_msgs::msg::VehicleWidth&& _vehicle_width);

            /*!
             * @brief This function returns a constant reference to member vehicle_width
             * @return Constant reference to member vehicle_width
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::VehicleWidth& vehicle_width() const;

            /*!
             * @brief This function returns a reference to member vehicle_width
             * @return Reference to member vehicle_width
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::VehicleWidth& vehicle_width();
            /*!
             * @brief This function copies the value in member longitudinal_acceleration
             * @param _longitudinal_acceleration New value to be copied in member longitudinal_acceleration
             */
            eProsima_user_DllExport void longitudinal_acceleration(
                    const etsi_its_cam_msgs::msg::LongitudinalAcceleration& _longitudinal_acceleration);

            /*!
             * @brief This function moves the value in member longitudinal_acceleration
             * @param _longitudinal_acceleration New value to be moved in member longitudinal_acceleration
             */
            eProsima_user_DllExport void longitudinal_acceleration(
                    etsi_its_cam_msgs::msg::LongitudinalAcceleration&& _longitudinal_acceleration);

            /*!
             * @brief This function returns a constant reference to member longitudinal_acceleration
             * @return Constant reference to member longitudinal_acceleration
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::LongitudinalAcceleration& longitudinal_acceleration() const;

            /*!
             * @brief This function returns a reference to member longitudinal_acceleration
             * @return Reference to member longitudinal_acceleration
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::LongitudinalAcceleration& longitudinal_acceleration();
            /*!
             * @brief This function copies the value in member curvature_
             * @param _curvature New value to be copied in member curvature_
             */
            eProsima_user_DllExport void curvature(
                    const etsi_its_cam_msgs::msg::Curvature& _curvature);

            /*!
             * @brief This function moves the value in member curvature_
             * @param _curvature New value to be moved in member curvature_
             */
            eProsima_user_DllExport void curvature(
                    etsi_its_cam_msgs::msg::Curvature&& _curvature);

            /*!
             * @brief This function returns a constant reference to member curvature_
             * @return Constant reference to member curvature_
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::Curvature& curvature() const;

            /*!
             * @brief This function returns a reference to member curvature_
             * @return Reference to member curvature_
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::Curvature& curvature();
            /*!
             * @brief This function copies the value in member curvature_calculation_mode
             * @param _curvature_calculation_mode New value to be copied in member curvature_calculation_mode
             */
            eProsima_user_DllExport void curvature_calculation_mode(
                    const etsi_its_cam_msgs::msg::CurvatureCalculationMode& _curvature_calculation_mode);

            /*!
             * @brief This function moves the value in member curvature_calculation_mode
             * @param _curvature_calculation_mode New value to be moved in member curvature_calculation_mode
             */
            eProsima_user_DllExport void curvature_calculation_mode(
                    etsi_its_cam_msgs::msg::CurvatureCalculationMode&& _curvature_calculation_mode);

            /*!
             * @brief This function returns a constant reference to member curvature_calculation_mode
             * @return Constant reference to member curvature_calculation_mode
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::CurvatureCalculationMode& curvature_calculation_mode() const;

            /*!
             * @brief This function returns a reference to member curvature_calculation_mode
             * @return Reference to member curvature_calculation_mode
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::CurvatureCalculationMode& curvature_calculation_mode();
            /*!
             * @brief This function copies the value in member yaw_rate
             * @param _yaw_rate New value to be copied in member yaw_rate
             */
            eProsima_user_DllExport void yaw_rate(
                    const etsi_its_cam_msgs::msg::YawRate& _yaw_rate);

            /*!
             * @brief This function moves the value in member yaw_rate
             * @param _yaw_rate New value to be moved in member yaw_rate
             */
            eProsima_user_DllExport void yaw_rate(
                    etsi_its_cam_msgs::msg::YawRate&& _yaw_rate);

            /*!
             * @brief This function returns a constant reference to member yaw_rate
             * @return Constant reference to member yaw_rate
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::YawRate& yaw_rate() const;

            /*!
             * @brief This function returns a reference to member yaw_rate
             * @return Reference to member yaw_rate
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::YawRate& yaw_rate();
            /*!
             * @brief This function copies the value in member acceleration_control
             * @param _acceleration_control New value to be copied in member acceleration_control
             */
            eProsima_user_DllExport void acceleration_control(
                    const etsi_its_cam_msgs::msg::AccelerationControl& _acceleration_control);

            /*!
             * @brief This function moves the value in member acceleration_control
             * @param _acceleration_control New value to be moved in member acceleration_control
             */
            eProsima_user_DllExport void acceleration_control(
                    etsi_its_cam_msgs::msg::AccelerationControl&& _acceleration_control);

            /*!
             * @brief This function returns a constant reference to member acceleration_control
             * @return Constant reference to member acceleration_control
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::AccelerationControl& acceleration_control() const;

            /*!
             * @brief This function returns a reference to member acceleration_control
             * @return Reference to member acceleration_control
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::AccelerationControl& acceleration_control();
            /*!
             * @brief This function sets a value in member acceleration_control_is_present
             * @param _acceleration_control_is_present New value for member acceleration_control_is_present
             */
            eProsima_user_DllExport void acceleration_control_is_present(
                    bool _acceleration_control_is_present);

            /*!
             * @brief This function returns the value of member acceleration_control_is_present
             * @return Value of member acceleration_control_is_present
             */
            eProsima_user_DllExport bool acceleration_control_is_present() const;

            /*!
             * @brief This function returns a reference to member acceleration_control_is_present
             * @return Reference to member acceleration_control_is_present
             */
            eProsima_user_DllExport bool& acceleration_control_is_present();

            /*!
             * @brief This function copies the value in member lane_position
             * @param _lane_position New value to be copied in member lane_position
             */
            eProsima_user_DllExport void lane_position(
                    const etsi_its_cam_msgs::msg::LanePosition& _lane_position);

            /*!
             * @brief This function moves the value in member lane_position
             * @param _lane_position New value to be moved in member lane_position
             */
            eProsima_user_DllExport void lane_position(
                    etsi_its_cam_msgs::msg::LanePosition&& _lane_position);

            /*!
             * @brief This function returns a constant reference to member lane_position
             * @return Constant reference to member lane_position
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::LanePosition& lane_position() const;

            /*!
             * @brief This function returns a reference to member lane_position
             * @return Reference to member lane_position
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::LanePosition& lane_position();
            /*!
             * @brief This function sets a value in member lane_position_is_present
             * @param _lane_position_is_present New value for member lane_position_is_present
             */
            eProsima_user_DllExport void lane_position_is_present(
                    bool _lane_position_is_present);

            /*!
             * @brief This function returns the value of member lane_position_is_present
             * @return Value of member lane_position_is_present
             */
            eProsima_user_DllExport bool lane_position_is_present() const;

            /*!
             * @brief This function returns a reference to member lane_position_is_present
             * @return Reference to member lane_position_is_present
             */
            eProsima_user_DllExport bool& lane_position_is_present();

            /*!
             * @brief This function copies the value in member steering_wheel_angle
             * @param _steering_wheel_angle New value to be copied in member steering_wheel_angle
             */
            eProsima_user_DllExport void steering_wheel_angle(
                    const etsi_its_cam_msgs::msg::SteeringWheelAngle& _steering_wheel_angle);

            /*!
             * @brief This function moves the value in member steering_wheel_angle
             * @param _steering_wheel_angle New value to be moved in member steering_wheel_angle
             */
            eProsima_user_DllExport void steering_wheel_angle(
                    etsi_its_cam_msgs::msg::SteeringWheelAngle&& _steering_wheel_angle);

            /*!
             * @brief This function returns a constant reference to member steering_wheel_angle
             * @return Constant reference to member steering_wheel_angle
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::SteeringWheelAngle& steering_wheel_angle() const;

            /*!
             * @brief This function returns a reference to member steering_wheel_angle
             * @return Reference to member steering_wheel_angle
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::SteeringWheelAngle& steering_wheel_angle();
            /*!
             * @brief This function sets a value in member steering_wheel_angle_is_present
             * @param _steering_wheel_angle_is_present New value for member steering_wheel_angle_is_present
             */
            eProsima_user_DllExport void steering_wheel_angle_is_present(
                    bool _steering_wheel_angle_is_present);

            /*!
             * @brief This function returns the value of member steering_wheel_angle_is_present
             * @return Value of member steering_wheel_angle_is_present
             */
            eProsima_user_DllExport bool steering_wheel_angle_is_present() const;

            /*!
             * @brief This function returns a reference to member steering_wheel_angle_is_present
             * @return Reference to member steering_wheel_angle_is_present
             */
            eProsima_user_DllExport bool& steering_wheel_angle_is_present();

            /*!
             * @brief This function copies the value in member lateral_acceleration
             * @param _lateral_acceleration New value to be copied in member lateral_acceleration
             */
            eProsima_user_DllExport void lateral_acceleration(
                    const etsi_its_cam_msgs::msg::LateralAcceleration& _lateral_acceleration);

            /*!
             * @brief This function moves the value in member lateral_acceleration
             * @param _lateral_acceleration New value to be moved in member lateral_acceleration
             */
            eProsima_user_DllExport void lateral_acceleration(
                    etsi_its_cam_msgs::msg::LateralAcceleration&& _lateral_acceleration);

            /*!
             * @brief This function returns a constant reference to member lateral_acceleration
             * @return Constant reference to member lateral_acceleration
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::LateralAcceleration& lateral_acceleration() const;

            /*!
             * @brief This function returns a reference to member lateral_acceleration
             * @return Reference to member lateral_acceleration
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::LateralAcceleration& lateral_acceleration();
            /*!
             * @brief This function sets a value in member lateral_acceleration_is_present
             * @param _lateral_acceleration_is_present New value for member lateral_acceleration_is_present
             */
            eProsima_user_DllExport void lateral_acceleration_is_present(
                    bool _lateral_acceleration_is_present);

            /*!
             * @brief This function returns the value of member lateral_acceleration_is_present
             * @return Value of member lateral_acceleration_is_present
             */
            eProsima_user_DllExport bool lateral_acceleration_is_present() const;

            /*!
             * @brief This function returns a reference to member lateral_acceleration_is_present
             * @return Reference to member lateral_acceleration_is_present
             */
            eProsima_user_DllExport bool& lateral_acceleration_is_present();

            /*!
             * @brief This function copies the value in member vertical_acceleration
             * @param _vertical_acceleration New value to be copied in member vertical_acceleration
             */
            eProsima_user_DllExport void vertical_acceleration(
                    const etsi_its_cam_msgs::msg::VerticalAcceleration& _vertical_acceleration);

            /*!
             * @brief This function moves the value in member vertical_acceleration
             * @param _vertical_acceleration New value to be moved in member vertical_acceleration
             */
            eProsima_user_DllExport void vertical_acceleration(
                    etsi_its_cam_msgs::msg::VerticalAcceleration&& _vertical_acceleration);

            /*!
             * @brief This function returns a constant reference to member vertical_acceleration
             * @return Constant reference to member vertical_acceleration
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::VerticalAcceleration& vertical_acceleration() const;

            /*!
             * @brief This function returns a reference to member vertical_acceleration
             * @return Reference to member vertical_acceleration
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::VerticalAcceleration& vertical_acceleration();
            /*!
             * @brief This function sets a value in member vertical_acceleration_is_present
             * @param _vertical_acceleration_is_present New value for member vertical_acceleration_is_present
             */
            eProsima_user_DllExport void vertical_acceleration_is_present(
                    bool _vertical_acceleration_is_present);

            /*!
             * @brief This function returns the value of member vertical_acceleration_is_present
             * @return Value of member vertical_acceleration_is_present
             */
            eProsima_user_DllExport bool vertical_acceleration_is_present() const;

            /*!
             * @brief This function returns a reference to member vertical_acceleration_is_present
             * @return Reference to member vertical_acceleration_is_present
             */
            eProsima_user_DllExport bool& vertical_acceleration_is_present();

            /*!
             * @brief This function copies the value in member performance_class
             * @param _performance_class New value to be copied in member performance_class
             */
            eProsima_user_DllExport void performance_class(
                    const etsi_its_cam_msgs::msg::PerformanceClass& _performance_class);

            /*!
             * @brief This function moves the value in member performance_class
             * @param _performance_class New value to be moved in member performance_class
             */
            eProsima_user_DllExport void performance_class(
                    etsi_its_cam_msgs::msg::PerformanceClass&& _performance_class);

            /*!
             * @brief This function returns a constant reference to member performance_class
             * @return Constant reference to member performance_class
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::PerformanceClass& performance_class() const;

            /*!
             * @brief This function returns a reference to member performance_class
             * @return Reference to member performance_class
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::PerformanceClass& performance_class();
            /*!
             * @brief This function sets a value in member performance_class_is_present
             * @param _performance_class_is_present New value for member performance_class_is_present
             */
            eProsima_user_DllExport void performance_class_is_present(
                    bool _performance_class_is_present);

            /*!
             * @brief This function returns the value of member performance_class_is_present
             * @return Value of member performance_class_is_present
             */
            eProsima_user_DllExport bool performance_class_is_present() const;

            /*!
             * @brief This function returns a reference to member performance_class_is_present
             * @return Reference to member performance_class_is_present
             */
            eProsima_user_DllExport bool& performance_class_is_present();

            /*!
             * @brief This function copies the value in member cen_dsrc_tolling_zone
             * @param _cen_dsrc_tolling_zone New value to be copied in member cen_dsrc_tolling_zone
             */
            eProsima_user_DllExport void cen_dsrc_tolling_zone(
                    const etsi_its_cam_msgs::msg::CenDsrcTollingZone& _cen_dsrc_tolling_zone);

            /*!
             * @brief This function moves the value in member cen_dsrc_tolling_zone
             * @param _cen_dsrc_tolling_zone New value to be moved in member cen_dsrc_tolling_zone
             */
            eProsima_user_DllExport void cen_dsrc_tolling_zone(
                    etsi_its_cam_msgs::msg::CenDsrcTollingZone&& _cen_dsrc_tolling_zone);

            /*!
             * @brief This function returns a constant reference to member cen_dsrc_tolling_zone
             * @return Constant reference to member cen_dsrc_tolling_zone
             */
            eProsima_user_DllExport const etsi_its_cam_msgs::msg::CenDsrcTollingZone& cen_dsrc_tolling_zone() const;

            /*!
             * @brief This function returns a reference to member cen_dsrc_tolling_zone
             * @return Reference to member cen_dsrc_tolling_zone
             */
            eProsima_user_DllExport etsi_its_cam_msgs::msg::CenDsrcTollingZone& cen_dsrc_tolling_zone();
            /*!
             * @brief This function sets a value in member cen_dsrc_tolling_zone_is_present
             * @param _cen_dsrc_tolling_zone_is_present New value for member cen_dsrc_tolling_zone_is_present
             */
            eProsima_user_DllExport void cen_dsrc_tolling_zone_is_present(
                    bool _cen_dsrc_tolling_zone_is_present);

            /*!
             * @brief This function returns the value of member cen_dsrc_tolling_zone_is_present
             * @return Value of member cen_dsrc_tolling_zone_is_present
             */
            eProsima_user_DllExport bool cen_dsrc_tolling_zone_is_present() const;

            /*!
             * @brief This function returns a reference to member cen_dsrc_tolling_zone_is_present
             * @return Reference to member cen_dsrc_tolling_zone_is_present
             */
            eProsima_user_DllExport bool& cen_dsrc_tolling_zone_is_present();


            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(
                    const etsi_its_cam_msgs::msg::BasicVehicleContainerHighFrequency& data,
                    size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(
                    eprosima::fastcdr::Cdr& cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(
                    eprosima::fastcdr::Cdr& cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
                    size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(
                    eprosima::fastcdr::Cdr& cdr) const;

        private:

            etsi_its_cam_msgs::msg::Heading m_heading;
            etsi_its_cam_msgs::msg::Speed m_speed;
            etsi_its_cam_msgs::msg::DriveDirection m_drive_direction;
            etsi_its_cam_msgs::msg::VehicleLength m_vehicle_length;
            etsi_its_cam_msgs::msg::VehicleWidth m_vehicle_width;
            etsi_its_cam_msgs::msg::LongitudinalAcceleration m_longitudinal_acceleration;
            etsi_its_cam_msgs::msg::Curvature m_curvature;
            etsi_its_cam_msgs::msg::CurvatureCalculationMode m_curvature_calculation_mode;
            etsi_its_cam_msgs::msg::YawRate m_yaw_rate;
            etsi_its_cam_msgs::msg::AccelerationControl m_acceleration_control;
            bool m_acceleration_control_is_present;
            etsi_its_cam_msgs::msg::LanePosition m_lane_position;
            bool m_lane_position_is_present;
            etsi_its_cam_msgs::msg::SteeringWheelAngle m_steering_wheel_angle;
            bool m_steering_wheel_angle_is_present;
            etsi_its_cam_msgs::msg::LateralAcceleration m_lateral_acceleration;
            bool m_lateral_acceleration_is_present;
            etsi_its_cam_msgs::msg::VerticalAcceleration m_vertical_acceleration;
            bool m_vertical_acceleration_is_present;
            etsi_its_cam_msgs::msg::PerformanceClass m_performance_class;
            bool m_performance_class_is_present;
            etsi_its_cam_msgs::msg::CenDsrcTollingZone m_cen_dsrc_tolling_zone;
            bool m_cen_dsrc_tolling_zone_is_present;
        };
    } // namespace msg
} // namespace etsi_its_cam_msgs

#endif // _FAST_DDS_GENERATED_ETSI_ITS_CAM_MSGS_MSG_BASICVEHICLECONTAINERHIGHFREQUENCY_H_