// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DestroyObject.cpp
 * This source file contains the implementation of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifdef _WIN32
// Remove linker warning LNK4221 on Visual Studio
namespace {
char dummy;
}  // namespace
#endif  // _WIN32

#include "DestroyObject.h"

#include <fastcdr/Cdr.h>


#include <fastcdr/exceptions/BadParamException.h>
using namespace eprosima::fastcdr::exception;

#include <utility>


namespace carla_msgs {

namespace srv {



DestroyObject_Request::DestroyObject_Request()
{
}

DestroyObject_Request::~DestroyObject_Request()
{
}

DestroyObject_Request::DestroyObject_Request(
        const DestroyObject_Request& x)
{
    m_id = x.m_id;
}

DestroyObject_Request::DestroyObject_Request(
        DestroyObject_Request&& x) noexcept
{
    m_id = x.m_id;
}

DestroyObject_Request& DestroyObject_Request::operator =(
        const DestroyObject_Request& x)
{

    m_id = x.m_id;
    return *this;
}

DestroyObject_Request& DestroyObject_Request::operator =(
        DestroyObject_Request&& x) noexcept
{

    m_id = x.m_id;
    return *this;
}

bool DestroyObject_Request::operator ==(
        const DestroyObject_Request& x) const
{
    return (m_id == x.m_id);
}

bool DestroyObject_Request::operator !=(
        const DestroyObject_Request& x) const
{
    return !(*this == x);
}

/*!
 * @brief This function sets a value in member id
 * @param _id New value for member id
 */
void DestroyObject_Request::id(
        int32_t _id)
{
    m_id = _id;
}

/*!
 * @brief This function returns the value of member id
 * @return Value of member id
 */
int32_t DestroyObject_Request::id() const
{
    return m_id;
}

/*!
 * @brief This function returns a reference to member id
 * @return Reference to member id
 */
int32_t& DestroyObject_Request::id()
{
    return m_id;
}




DestroyObject_Response::DestroyObject_Response()
{
}

DestroyObject_Response::~DestroyObject_Response()
{
}

DestroyObject_Response::DestroyObject_Response(
        const DestroyObject_Response& x)
{
    m_success = x.m_success;
}

DestroyObject_Response::DestroyObject_Response(
        DestroyObject_Response&& x) noexcept
{
    m_success = x.m_success;
}

DestroyObject_Response& DestroyObject_Response::operator =(
        const DestroyObject_Response& x)
{

    m_success = x.m_success;
    return *this;
}

DestroyObject_Response& DestroyObject_Response::operator =(
        DestroyObject_Response&& x) noexcept
{

    m_success = x.m_success;
    return *this;
}

bool DestroyObject_Response::operator ==(
        const DestroyObject_Response& x) const
{
    return (m_success == x.m_success);
}

bool DestroyObject_Response::operator !=(
        const DestroyObject_Response& x) const
{
    return !(*this == x);
}

/*!
 * @brief This function sets a value in member success
 * @param _success New value for member success
 */
void DestroyObject_Response::success(
        bool _success)
{
    m_success = _success;
}

/*!
 * @brief This function returns the value of member success
 * @return Value of member success
 */
bool DestroyObject_Response::success() const
{
    return m_success;
}

/*!
 * @brief This function returns a reference to member success
 * @return Reference to member success
 */
bool& DestroyObject_Response::success()
{
    return m_success;
}




} // namespace srv


} // namespace carla_msgs
// Include auxiliary functions like for serializing/deserializing.
#include "DestroyObjectCdrAux.ipp"

