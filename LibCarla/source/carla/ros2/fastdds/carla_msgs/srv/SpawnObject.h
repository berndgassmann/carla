// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SpawnObject.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_CARLA_MSGS_SRV_SPAWNOBJECT_H_
#define _FAST_DDS_GENERATED_CARLA_MSGS_SRV_SPAWNOBJECT_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "carla_msgs/msg/CarlaActorBlueprint.h"
#include "geometry_msgs/msg/Pose.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SPAWNOBJECT_SOURCE)
#define SPAWNOBJECT_DllAPI __declspec(dllexport)
#else
#define SPAWNOBJECT_DllAPI __declspec(dllimport)
#endif  // SPAWNOBJECT_SOURCE
#else
#define SPAWNOBJECT_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SPAWNOBJECT_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace carla_msgs {

namespace srv {

/*!
 * @brief This class represents the structure SpawnObject_Request defined by the user in the IDL file.
 * @ingroup SpawnObject
 */
class SpawnObject_Request {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport SpawnObject_Request();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~SpawnObject_Request();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Request that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Request(const SpawnObject_Request& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Request that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Request(SpawnObject_Request&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Request that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Request& operator=(const SpawnObject_Request& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Request that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Request& operator=(SpawnObject_Request&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::srv::SpawnObject_Request object to compare.
   */
  eProsima_user_DllExport bool operator==(const SpawnObject_Request& x) const;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::srv::SpawnObject_Request object to compare.
   */
  eProsima_user_DllExport bool operator!=(const SpawnObject_Request& x) const;

  /*!
   * @brief This function copies the value in member blueprint
   * @param _blueprint New value to be copied in member blueprint
   */
  eProsima_user_DllExport void blueprint(const carla_msgs::msg::CarlaActorBlueprint& _blueprint);

  /*!
   * @brief This function moves the value in member blueprint
   * @param _blueprint New value to be moved in member blueprint
   */
  eProsima_user_DllExport void blueprint(carla_msgs::msg::CarlaActorBlueprint&& _blueprint);

  /*!
   * @brief This function returns a constant reference to member blueprint
   * @return Constant reference to member blueprint
   */
  eProsima_user_DllExport const carla_msgs::msg::CarlaActorBlueprint& blueprint() const;

  /*!
   * @brief This function returns a reference to member blueprint
   * @return Reference to member blueprint
   */
  eProsima_user_DllExport carla_msgs::msg::CarlaActorBlueprint& blueprint();

  /*!
   * @brief This function copies the value in member transform
   * @param _transform New value to be copied in member transform
   */
  eProsima_user_DllExport void transform(const geometry_msgs::msg::Pose& _transform);

  /*!
   * @brief This function moves the value in member transform
   * @param _transform New value to be moved in member transform
   */
  eProsima_user_DllExport void transform(geometry_msgs::msg::Pose&& _transform);

  /*!
   * @brief This function returns a constant reference to member transform
   * @return Constant reference to member transform
   */
  eProsima_user_DllExport const geometry_msgs::msg::Pose& transform() const;

  /*!
   * @brief This function returns a reference to member transform
   * @return Reference to member transform
   */
  eProsima_user_DllExport geometry_msgs::msg::Pose& transform();

  /*!
   * @brief This function sets a value in member attach_to
   * @param _attach_to New value for member attach_to
   */
  eProsima_user_DllExport void attach_to(uint32_t _attach_to);

  /*!
   * @brief This function returns the value of member attach_to
   * @return Value of member attach_to
   */
  eProsima_user_DllExport uint32_t attach_to() const;

  /*!
   * @brief This function returns a reference to member attach_to
   * @return Reference to member attach_to
   */
  eProsima_user_DllExport uint32_t& attach_to();

  /*!
   * @brief This function sets a value in member random_pose
   * @param _random_pose New value for member random_pose
   */
  eProsima_user_DllExport void random_pose(bool _random_pose);

  /*!
   * @brief This function returns the value of member random_pose
   * @return Value of member random_pose
   */
  eProsima_user_DllExport bool random_pose() const;

  /*!
   * @brief This function returns a reference to member random_pose
   * @return Reference to member random_pose
   */
  eProsima_user_DllExport bool& random_pose();

private:
  carla_msgs::msg::CarlaActorBlueprint m_blueprint;
  geometry_msgs::msg::Pose m_transform;
  uint32_t m_attach_to{0};
  bool m_random_pose{false};
};

/*!
 * @brief This class represents the structure SpawnObject_Response defined by the user in the IDL file.
 * @ingroup SpawnObject
 */
class SpawnObject_Response {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport SpawnObject_Response();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~SpawnObject_Response();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Response that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Response(const SpawnObject_Response& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Response that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Response(SpawnObject_Response&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Response that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Response& operator=(const SpawnObject_Response& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object carla_msgs::srv::SpawnObject_Response that will be copied.
   */
  eProsima_user_DllExport SpawnObject_Response& operator=(SpawnObject_Response&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::srv::SpawnObject_Response object to compare.
   */
  eProsima_user_DllExport bool operator==(const SpawnObject_Response& x) const;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::srv::SpawnObject_Response object to compare.
   */
  eProsima_user_DllExport bool operator!=(const SpawnObject_Response& x) const;

  /*!
   * @brief This function sets a value in member id
   * @param _id New value for member id
   */
  eProsima_user_DllExport void id(int32_t _id);

  /*!
   * @brief This function returns the value of member id
   * @return Value of member id
   */
  eProsima_user_DllExport int32_t id() const;

  /*!
   * @brief This function returns a reference to member id
   * @return Reference to member id
   */
  eProsima_user_DllExport int32_t& id();

  /*!
   * @brief This function copies the value in member error_string
   * @param _error_string New value to be copied in member error_string
   */
  eProsima_user_DllExport void error_string(const std::string& _error_string);

  /*!
   * @brief This function moves the value in member error_string
   * @param _error_string New value to be moved in member error_string
   */
  eProsima_user_DllExport void error_string(std::string&& _error_string);

  /*!
   * @brief This function returns a constant reference to member error_string
   * @return Constant reference to member error_string
   */
  eProsima_user_DllExport const std::string& error_string() const;

  /*!
   * @brief This function returns a reference to member error_string
   * @return Reference to member error_string
   */
  eProsima_user_DllExport std::string& error_string();

private:
  int32_t m_id{0};
  std::string m_error_string;
};

}  // namespace srv

}  // namespace carla_msgs

#endif  // _FAST_DDS_GENERATED_CARLA_MSGS_SRV_SPAWNOBJECT_H_
