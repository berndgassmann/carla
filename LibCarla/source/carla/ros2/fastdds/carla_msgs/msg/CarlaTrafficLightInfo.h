// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file CarlaTrafficLightInfo.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_CARLA_MSGS_MSG_CARLATRAFFICLIGHTINFO_H_
#define _FAST_DDS_GENERATED_CARLA_MSGS_MSG_CARLATRAFFICLIGHTINFO_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "CarlaBoundingBox.h"
#include "geometry_msgs/msg/Pose.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(CARLATRAFFICLIGHTINFO_SOURCE)
#define CARLATRAFFICLIGHTINFO_DllAPI __declspec(dllexport)
#else
#define CARLATRAFFICLIGHTINFO_DllAPI __declspec(dllimport)
#endif  // CARLATRAFFICLIGHTINFO_SOURCE
#else
#define CARLATRAFFICLIGHTINFO_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define CARLATRAFFICLIGHTINFO_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace carla_msgs {

namespace msg {

/*!
 * @brief This class represents the structure CarlaTrafficLightInfo defined by the user in the IDL file.
 * @ingroup CarlaTrafficLightInfo
 */
class CarlaTrafficLightInfo {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport CarlaTrafficLightInfo();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~CarlaTrafficLightInfo();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object carla_msgs::msg::CarlaTrafficLightInfo that will be copied.
   */
  eProsima_user_DllExport CarlaTrafficLightInfo(const CarlaTrafficLightInfo& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object carla_msgs::msg::CarlaTrafficLightInfo that will be copied.
   */
  eProsima_user_DllExport CarlaTrafficLightInfo(CarlaTrafficLightInfo&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object carla_msgs::msg::CarlaTrafficLightInfo that will be copied.
   */
  eProsima_user_DllExport CarlaTrafficLightInfo& operator=(const CarlaTrafficLightInfo& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object carla_msgs::msg::CarlaTrafficLightInfo that will be copied.
   */
  eProsima_user_DllExport CarlaTrafficLightInfo& operator=(CarlaTrafficLightInfo&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::msg::CarlaTrafficLightInfo object to compare.
   */
  eProsima_user_DllExport bool operator==(const CarlaTrafficLightInfo& x) const;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::msg::CarlaTrafficLightInfo object to compare.
   */
  eProsima_user_DllExport bool operator!=(const CarlaTrafficLightInfo& x) const;

  /*!
   * @brief This function sets a value in member id
   * @param _id New value for member id
   */
  eProsima_user_DllExport void id(uint32_t _id);

  /*!
   * @brief This function returns the value of member id
   * @return Value of member id
   */
  eProsima_user_DllExport uint32_t id() const;

  /*!
   * @brief This function returns a reference to member id
   * @return Reference to member id
   */
  eProsima_user_DllExport uint32_t& id();

  /*!
   * @brief This function copies the value in member transform
   * @param _transform New value to be copied in member transform
   */
  eProsima_user_DllExport void transform(const geometry_msgs::msg::Pose& _transform);

  /*!
   * @brief This function moves the value in member transform
   * @param _transform New value to be moved in member transform
   */
  eProsima_user_DllExport void transform(geometry_msgs::msg::Pose&& _transform);

  /*!
   * @brief This function returns a constant reference to member transform
   * @return Constant reference to member transform
   */
  eProsima_user_DllExport const geometry_msgs::msg::Pose& transform() const;

  /*!
   * @brief This function returns a reference to member transform
   * @return Reference to member transform
   */
  eProsima_user_DllExport geometry_msgs::msg::Pose& transform();

  /*!
   * @brief This function copies the value in member trigger_volume
   * @param _trigger_volume New value to be copied in member trigger_volume
   */
  eProsima_user_DllExport void trigger_volume(const carla_msgs::msg::CarlaBoundingBox& _trigger_volume);

  /*!
   * @brief This function moves the value in member trigger_volume
   * @param _trigger_volume New value to be moved in member trigger_volume
   */
  eProsima_user_DllExport void trigger_volume(carla_msgs::msg::CarlaBoundingBox&& _trigger_volume);

  /*!
   * @brief This function returns a constant reference to member trigger_volume
   * @return Constant reference to member trigger_volume
   */
  eProsima_user_DllExport const carla_msgs::msg::CarlaBoundingBox& trigger_volume() const;

  /*!
   * @brief This function returns a reference to member trigger_volume
   * @return Reference to member trigger_volume
   */
  eProsima_user_DllExport carla_msgs::msg::CarlaBoundingBox& trigger_volume();

private:
  uint32_t m_id{0};
  geometry_msgs::msg::Pose m_transform;
  carla_msgs::msg::CarlaBoundingBox m_trigger_volume;
};

}  // namespace msg

}  // namespace carla_msgs

#endif  // _FAST_DDS_GENERATED_CARLA_MSGS_MSG_CARLATRAFFICLIGHTINFO_H_
