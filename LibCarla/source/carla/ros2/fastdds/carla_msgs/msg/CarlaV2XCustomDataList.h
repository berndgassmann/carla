// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file CarlaV2XCustomDataList.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_CARLA_MSGS_MSG_CARLAV2XCUSTOMDATALIST_H_
#define _FAST_DDS_GENERATED_CARLA_MSGS_MSG_CARLAV2XCUSTOMDATALIST_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "CarlaV2XCustomData.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(CARLAV2XCUSTOMDATALIST_SOURCE)
#define CARLAV2XCUSTOMDATALIST_DllAPI __declspec(dllexport)
#else
#define CARLAV2XCUSTOMDATALIST_DllAPI __declspec(dllimport)
#endif  // CARLAV2XCUSTOMDATALIST_SOURCE
#else
#define CARLAV2XCUSTOMDATALIST_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define CARLAV2XCUSTOMDATALIST_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace carla_msgs {

namespace msg {

/*!
 * @brief This class represents the structure CarlaV2XCustomDataList defined by the user in the IDL file.
 * @ingroup CarlaV2XCustomDataList
 */
class CarlaV2XCustomDataList {
public:
  /*!
   * @brief Default constructor.
   */
  eProsima_user_DllExport CarlaV2XCustomDataList();

  /*!
   * @brief Default destructor.
   */
  eProsima_user_DllExport ~CarlaV2XCustomDataList();

  /*!
   * @brief Copy constructor.
   * @param x Reference to the object carla_msgs::msg::CarlaV2XCustomDataList that will be copied.
   */
  eProsima_user_DllExport CarlaV2XCustomDataList(const CarlaV2XCustomDataList& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object carla_msgs::msg::CarlaV2XCustomDataList that will be copied.
   */
  eProsima_user_DllExport CarlaV2XCustomDataList(CarlaV2XCustomDataList&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object carla_msgs::msg::CarlaV2XCustomDataList that will be copied.
   */
  eProsima_user_DllExport CarlaV2XCustomDataList& operator=(const CarlaV2XCustomDataList& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object carla_msgs::msg::CarlaV2XCustomDataList that will be copied.
   */
  eProsima_user_DllExport CarlaV2XCustomDataList& operator=(CarlaV2XCustomDataList&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::msg::CarlaV2XCustomDataList object to compare.
   */
  eProsima_user_DllExport bool operator==(const CarlaV2XCustomDataList& x) const;

  /*!
   * @brief Comparison operator.
   * @param x carla_msgs::msg::CarlaV2XCustomDataList object to compare.
   */
  eProsima_user_DllExport bool operator!=(const CarlaV2XCustomDataList& x) const;

  /*!
   * @brief This function copies the value in member data
   * @param _data New value to be copied in member data
   */
  eProsima_user_DllExport void data(const std::vector<carla_msgs::msg::CarlaV2XCustomData>& _data);

  /*!
   * @brief This function moves the value in member data
   * @param _data New value to be moved in member data
   */
  eProsima_user_DllExport void data(std::vector<carla_msgs::msg::CarlaV2XCustomData>&& _data);

  /*!
   * @brief This function returns a constant reference to member data
   * @return Constant reference to member data
   */
  eProsima_user_DllExport const std::vector<carla_msgs::msg::CarlaV2XCustomData>& data() const;

  /*!
   * @brief This function returns a reference to member data
   * @return Reference to member data
   */
  eProsima_user_DllExport std::vector<carla_msgs::msg::CarlaV2XCustomData>& data();

private:
  std::vector<carla_msgs::msg::CarlaV2XCustomData> m_data;
};

}  // namespace msg

}  // namespace carla_msgs

#endif  // _FAST_DDS_GENERATED_CARLA_MSGS_MSG_CARLAV2XCUSTOMDATALIST_H_
